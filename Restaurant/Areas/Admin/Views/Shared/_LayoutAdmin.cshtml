@using Restaurant.Models
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <title>@ViewData["title"] FRest Admin Dashboard</title>
    <meta content="Administrator Panel for Frest Restaurant" name="description">
    <meta content="Order , Manage" name="keywords">

    <!-- Favicons -->
    <link href="~/NiceAdmin/assets/img/favicon.png" rel="icon">
    <link href="assets/img/apple-touch-icon.png" rel="apple-touch-icon">

    <!-- Google Fonts -->
    <link href="https://fonts.gstatic.com" rel="preconnect">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="~/NiceAdmin/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/NiceAdmin/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="~/NiceAdmin/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="~/NiceAdmin/assets/vendor/quill/quill.snow.css" rel="stylesheet">
    <link href="~/NiceAdmin/assets/vendor/quill/quill.bubble.css" rel="stylesheet">
    <link href="~/NiceAdmin/assets/vendor/remixicon/remixicon.css" rel="stylesheet">
    <link href="~/NiceAdmin/assets/vendor/simple-datatables/style.css" rel="stylesheet">

    <!-- Template Main CSS File -->
    <link href="~/NiceAdmin/assets/css/style.css" rel="stylesheet">

</head>

<body>

    <!-- ======= Header ======= -->
    <header id="header" class="header fixed-top d-flex align-items-center">
        <div class="d-flex align-items-center justify-content-between">
            <a asp-action="Index" asp-controller="Dashboard" class="logo d-flex align-items-center">
                <img src="~/NiceAdmin/assets/img/logo.png" alt="">
                <span class="d-none d-lg-block">FRest System</span>
            </a>
            <i class="bi bi-list toggle-sidebar-btn"></i>
        </div><!-- End Logo -->

        <div class="notification-icon d-flex align-items-center justify-content-end position-absolute top-0" style="right: 30px; padding-top: 10px;">
            <i class="bi bi-bell-fill" style="font-size: 24px; cursor: pointer;" data-bs-toggle="dropdown" aria-expanded="false"></i>

            <!-- Notification Dropdown Menu -->
            <ul class="dropdown-menu dropdown-menu-end" style="max-height: 500px; overflow-y: auto; width: 400px; margin-left: 10px;" data-bs-auto-close="outside" id="notificationDropdown">

                <!-- Tab Navigation -->
                <nav>
                    <div class="nav nav-tabs" id="nav-tab" role="tablist">
                        <button class="nav-link active" id="nav-all-tab" data-bs-toggle="tab" data-bs-target="#nav-all" type="button" role="tab">All</button>
                        <button class="nav-link" id="nav-comments-tab" data-bs-toggle="tab" data-bs-target="#nav-comments" type="button" role="tab">Comments</button>
                        <button class="nav-link" id="nav-orders-tab" data-bs-toggle="tab" data-bs-target="#nav-orders" type="button" role="tab">Orders</button>
                    </div>
                </nav>

                <!-- Tab Content -->
                <div class="tab-content" id="nav-tabContent" style="padding-top: 10px;">
                    <!-- All Notifications Tab -->
                    <div class="tab-pane fade show active" id="nav-all" role="tabpanel">
                        @* Display both comments and orders *@
                        @if (ViewData["CombinedNotifications"] != null)
                        {
                            var combinedNotifications = ViewData["CombinedNotifications"] as List<object>;

                            if (combinedNotifications != null && combinedNotifications.Any())
                            {
                                @foreach (var notification in combinedNotifications)
                                {
                                    if (notification is CommentModel comment)
                                    {
                                        <li class="notification-item">
                                            <a class="dropdown-item" href="@Url.Action("Detail", "Stories", new { id = comment.BlogId, area = "" })" target="_blank">
                                                <strong>@($"@{comment.UserName}")</strong> commented on
                                                <em>@(comment.Blog?.title ?? "Unknown Title")</em>:
                                                <p>@(comment.Content.Length > 35 ? comment.Content.Substring(0, 35) + "..." : comment.Content)</p>
                                                <small class="text-muted">@comment.CreatedDate.ToString("MMMM dd, yyyy HH:mm")</small>
                                            </a>
                                        </li>
                                    }
                                    else if (notification is OrderModel order)
                                    {
                                        <li class="notification-item">
                                            <a class="dropdown-item" href="@Url.Action("Detail", "Order", new { id = order.id, area = "Admin" })" target="_blank">
                                                <strong>Order #@order.id</strong> - Status: @order.status
                                                <small class="text-muted">@order.createdDate?.ToString("MMMM dd, yyyy HH:mm")</small>
                                            </a>
                                        </li>
                                    }
                                }
                            }
                            else
                            {
                                <li><a class="dropdown-item" href="#">No new notifications</a></li>
                            }
                        }
                    </div>


                    <!-- Comments Tab -->
                    <div class="tab-pane fade" id="nav-comments" role="tabpanel">
                        @* Display comments only *@
                        @if (ViewData["LatestComments"] != null)
                        {
                            var comments = ViewData["LatestComments"] as List<CommentModel>;
                            if (comments != null && comments.Any())
                            {
                                @foreach (var comment in comments)
                                {
                                    <li class="notification-item">
                                        <a class="dropdown-item" href="@Url.Action("Detail", "Stories", new { id = comment.BlogId, area = "" })" target="_blank">
                                            <strong>@($"@{comment.UserName}")</strong> commented on 
                                            <em>@(comment.Blog?.title ?? "Unknown Title")</em>:
                                            <p>@(comment.Content.Length > 35 ? comment.Content.Substring(0, 35) + "..." : comment.Content)</p>
                                            <small class="text-muted">@comment.CreatedDate.ToString("MMMM dd, yyyy HH:mm")</small>
                                        </a>
                                    </li>
                                }
                            }
                            else
                            {
                                <li><a class="dropdown-item" href="#">No new comments</a></li>
                            }
                        }
                    </div>

                    <!-- Orders Tab -->
                    <div class="tab-pane fade" id="nav-orders" role="tabpanel">
                        @* Display orders only *@
                        @if (ViewData["LatestOrders"] != null)
                        {
                            var orders = ViewData["LatestOrders"] as List<OrderModel>;
                            if (orders != null && orders.Any())
                            {
                                @foreach (var order in orders)
                                {
                                    <li class="notification-item">
                                        <a class="dropdown-item" href="@Url.Action("Detail", "Order", new { id = order.id, area = "Admin" })" target="_blank">
                                            <strong>Order #@order.id</strong> - Status: @order.status
                                            <small class="text-muted">@order.createdDate?.ToString("MMMM dd, yyyy HH:mm")</small>
                                        </a>
                                    </li>
                                }
                            }
                            else
                            {
                                <li><a class="dropdown-item" href="#">No new orders</a></li>
                            }
                        }
                    </div>
                </div>
            </ul>
        </div>

    </header><!-- End Header -->
    <!-- ======= Sidebar ======= -->
    <aside id="sidebar" class="sidebar">

        <ul class="sidebar-nav" id="sidebar-nav">

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Dashboard" ? "active" : "collapsed")" asp-action="Index" asp-controller="Dashboard">
                    <i class="bi bi-grid"></i>
                    <span>Dashboard</span>
                </a>
            </li><!-- End Dashboard Nav -->

            <li class="nav-heading">Manage Board</li>

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "User" ? "active" : "collapsed")" asp-action="Index" asp-controller="User">
                    <i class="bi bi-file-earmark-person-fill"></i>
                    <span>Users</span>
                </a>
            </li><!-- End Users Nav -->

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Category" ? "active" : "collapsed")" asp-action="Index" asp-controller="Category">
                    <i class="bi bi-archive"></i>
                    <span>Category</span>
                </a>
            </li><!-- End Category Nav -->

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Dish" ? "active" : "collapsed")" asp-action="Index" asp-controller="Dish">
                    <i class="bi bi-card-list"></i>
                    <span>Dishes</span>
                </a>
            </li><!-- End Dishes Nav -->

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Blog" ? "active" : "collapsed")" asp-action="Index" asp-controller="Blog">
                    <i class="bi bi-book"></i>
                    <span>Blog</span>
                </a>
            </li><!-- End Blog Nav -->

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Order" ? "active" : "collapsed")" asp-action="Index" asp-controller="Order">
                    <i class="bi bi-basket"></i>
                    <span>Order</span>
                </a>
            </li><!-- End Order Nav -->

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Ads" ? "active" : "collapsed")" asp-action="Index" asp-controller="Ads">
                    <i class="bi bi-badge-ad-fill"></i>
                    <span>Ads</span>
                </a>
            </li><!-- End Ads Nav -->

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "WebSetting" ? "active" : "collapsed")" asp-action="Index" asp-controller="WebSetting">
                    <i class="bi bi-sliders"></i>
                    <span>Web Setting</span>
                </a>
            </li><!-- End Web Setting Nav -->

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Chat" ? "active" : "collapsed")" asp-action="Index" asp-controller="Chat">
                    <i class="bi bi-chat-dots"></i>
                    <span>Chat</span>
                </a>
            </li><!-- End Chat Nav -->

            <li class="nav-heading">Account</li>

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Home" ? "active" : "collapsed")" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-house-fill"></i>
                    <span>Back to Home</span>
                </a>
            </li><!-- Back to Home Nav -->

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Account" && ViewContext.RouteData.Values["Action"]?.ToString() == "VerifyEmailForChangePassword" ? "active" : "collapsed")" asp-area="" asp-controller="Account" asp-action="VerifyEmailForChangePassword">
                    <i class="bi bi-person-fill-gear"></i>
                    <span>Change Password</span>
                </a>
            </li><!-- Change Password Nav -->

            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Account" && ViewContext.RouteData.Values["Action"]?.ToString() == "Logout" ? "active" : "collapsed")" asp-area="" asp-controller="Account" asp-action="Logout">
                    <i class="bi bi-box-arrow-right"></i>
                    <span>Sign Out</span>
                </a>
            </li><!-- Sign Out Nav -->
        </ul>

    </aside><!-- End Sidebar -->

    <main id="main" class="main">

        @RenderBody()

    </main><!-- End #main -->

    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

    <!-- Vendor JS Files -->
    <script src="~/js/jquery.min.js"></script>
    <script src="~/NiceAdmin/assets/vendor/apexcharts/apexcharts.min.js"></script>
    <script src="~/NiceAdmin/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/NiceAdmin/assets/vendor/chart.js/chart.umd.js"></script>
    <script src="~/NiceAdmin/assets/vendor/echarts/echarts.min.js"></script>
    <script src="~/NiceAdmin/assets/vendor/quill/quill.js"></script>
    <script src="~/NiceAdmin/assets/vendor/simple-datatables/simple-datatables.js"></script>
    <script src="~/NiceAdmin/assets/vendor/tinymce/tinymce.min.js"></script>
    <script src="~/NiceAdmin/assets/vendor/php-email-form/validate.js"></script>

    <!-- Template Main JS File -->
    <script src="~/NiceAdmin/assets/js/main.js"></script>
    <!-- Render the Scripts section -->
    @RenderSection("Scripts", required: false)

</body>

</html>

<style>
    .notification-icon {
        display: flex;
        align-items: center;
        position: absolute;
        top: 0;
        right: 30px;
        padding-top: 10px;
    }

    .notification-item {
        transition: background-color 0.3s ease;
        position: relative;
        max-width: 100%;
    }

        .notification-item .dropdown-item {
            display: block;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        /* Style the title and content truncation */
        .notification-item a {
            display: flex;
            flex-direction: column;
            justify-content: center;
            width: 100%;
        }

        .notification-item strong,
        .notification-item em {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            max-width: 100%;
        }
</style>

<script>
    // Prevent dropdown from closing on clicks within the notification dropdown
    document.getElementById("notificationDropdown").addEventListener("click", function (event) {
        event.stopPropagation();
    });
</script>