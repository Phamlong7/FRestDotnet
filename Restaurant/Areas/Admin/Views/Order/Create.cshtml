@model Restaurant.ViewModels.OrderViewModel

@{
    ViewData["Title"] = "Add A Order";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true"
         style="position: fixed; top: 20px; right: 20px; z-index: 1050; min-width: 250px;">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["ErrorMessage"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                    aria-label="Close"></button>
        </div>
    </div>
}

<main id="content" class="content-area">

    <div class="pagetitle">
        <h1>Add A Order</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                <li class="breadcrumb-item">Tables</li>
                <li class="breadcrumb-item active">Data</li>
            </ol>
        </nav>
    </div><!-- End Page Title -->

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Add A Order</h5>

                        <form asp-action="Create" method="post">
                            @Html.AntiForgeryToken()

                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <!-- Dish Inputs -->
                            <div class="mb-3 row">
                                <div class="col-md-6">
                                    <label class="form-label">Dish Name</label>
                                    <input type="text" id="dishName" class="form-control"
                                           placeholder="Enter Dish Name" />
                                    <input type="hidden" id="dishId" />
                                    <span class="text-danger" id="dishNameError"></span>
                                    <ul id="suggestions" class="list-group" style="display:none; position:absolute;">
                                    </ul>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Price</label>
                                    <input type="number" id="dishPrice" class="form-control" disabled />
                                    <span class="text-danger" id="dishPriceError"></span>
                                </div>
                            </div>

                            <div class="mb-3 row">
                                <div class="col-md-6">
                                    <label class="form-label">Quantity</label>
                                    <input type="number" id="quantity" class="form-control" min="1" value="1" />
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Total</label>
                                    <input type="text" id="total" class="form-control" disabled />
                                </div>
                            </div>

                            <!-- Add Dish Button -->
                            <div class="mb-3">
                                <button type="button" id="addDish" class="btn btn-primary">Add Dish</button>
                            </div>

                            <h3 class="card-title">Order Detail</h3>
                            <table id="dishTable" class="table">
                                <thead>
                                    <tr>
                                        <th>Dish Name</th>
                                        <th>Quantity</th>
                                        <th>Price</th>
                                        <th>Total</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Dynamically populated -->
                                </tbody>
                            </table>

                            <!-- Message -->
                            <div class="mb-3">
                                <label asp-for="Message" class="form-label">Message</label>
                                <textarea asp-for="Message" class="form-control"></textarea>
                                <span asp-validation-for="Message" class="text-danger"></span>
                            </div>

                            <!-- Buttons Row -->
                            <div class="mb-4 d-flex justify-content-center">
                                <a asp-controller="Order" asp-action="Index" class="btn btn-secondary me-2">Cancel</a>
                                <button type="submit" class="btn btn-primary">Create</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script>
        let dishIndex = 0;

        function updateTotal() {
            const price = parseFloat($('#dishPrice').val()) || 0;
            const quantity = parseInt($('#quantity').val()) || 1;
            const total = price * quantity;
            $('#total').val(total.toFixed(2));
        }

        $(document).ready(function () {
            $('#quantity').on('input change', function () {
                updateTotal();
            });

            // Fetch dish suggestions
            $('#dishName').on('input', function () {
                const term = $(this).val();
                if (term.length >= 1) {
                    $.ajax({
                        url: '@Url.Action("SearchDishes", "Order")',
                        type: 'GET',
                        data: { term: term },
                        success: function (data) {
                            $('#suggestions').empty();
                            if (data.length > 0) {
                                $.each(data, function (index, dish) {
                                    $('#suggestions').append(`<li class="list-group-item suggestion-item" data-id="${dish.id}" data-title="${dish.title}" data-price="${dish.price}">${dish.title} - $${dish.price.toFixed(2)}</li>`);
                                });
                                $('#suggestions').show();
                            } else {
                                $('#suggestions').hide();
                            }
                        }
                    });
                } else {
                    $('#suggestions').hide();
                }
            });

            $(document).on('click', '.suggestion-item', function () {
                const selectedDishTitle = $(this).data('title');
                const selectedDishPrice = $(this).data('price');
                const selectedDishId = $(this).data('id'); // Ensure include a data-id for the dishId
                $('#dishName').val(selectedDishTitle);
                $('#dishPrice').val(selectedDishPrice);
                $('#dishId').val(selectedDishId); // Set the DishId
                updateTotal();
                $('#suggestions').hide();
            });

            $('#addDish').on('click', function () {
                const dishName = $('#dishName').val();
                const dishPrice = parseFloat($('#dishPrice').val()) || 0;
                const quantity = parseInt($('#quantity').val()) || 0;
                const dishId = $('#dishId').val();
                const total = dishPrice * quantity;

                if (dishName && quantity > 0 && dishPrice > 0 && dishId) {
                    const newRow = `
                                    <tr>
                                        <td>
                                            <input type="hidden" name="OrderDetails[${dishIndex}].DishId" value="${$('#dishId').val()}" />
                                            <input type="text" name="OrderDetails[${dishIndex}].DishName" value="${dishName}" readonly />
                                        </td>
                                        <td><input type="number" class="form-control" name="OrderDetails[${dishIndex}].Quantity" value="${quantity}" min="1" readonly /></td>
                                                <td><input type="text" class="form-control" name="OrderDetails[${dishIndex}].Price" value="${dishPrice.toFixed(2)}" readonly /></td>
                                        <td><input type="text" class="form-control total" name="OrderDetails[${dishIndex}].Total" value="${total.toFixed(2)}" readonly /></td>
                                        <td><a href="javascript:void(0);" class="btn btn-danger btn-sm remove-dish"><i class="bi bi-trash"></i> Remove</a></td>
                                    </tr>
                                `;
                    $('#dishTable tbody').append(newRow);
                    dishIndex++;
                    $('#dishName').val('');
                    $('#quantity').val(1);
                    $('#dishPrice').val('');
                    $('#total').val('');
                    $('#suggestions').hide();
                }
            });

            $(document).on('click', '.remove-dish', function () {
                $(this).closest('tr').remove();
            });
        });
    </script>

    <script>
        // Initialize toast notification with extended display time
        document.addEventListener('DOMContentLoaded', function () {
            var toastElList = [].slice.call(document.querySelectorAll('.toast'))
            var toastList = toastElList.map(function (toastEl) {
                return new bootstrap.Toast(toastEl, {
                    delay: 10000,  // Display for 10 seconds (10000 milliseconds)
                    autohide: true // Set to true for auto-hiding the toast
                })
            })
            toastList.forEach(toast => toast.show());
        });
    </script>
}