<div class="home-popup__background" onclick="closePopup()" style="display: none;">
    <div class="home-popup__content">
        <!-- Ad image will be dynamically loaded here -->
        <div id="adImageContainer"></div>

        <div class="home-popup__close-area">
            <div class="home-popup__close-btn" role="button" tabindex="0" aria-label="Close" onclick="closePopup(event)">
                <svg viewBox="0 0 16 16" stroke="#EE4D2D" class="home-popup__close-button">
                    <path stroke-linecap="round" d="M1.1,1.1L15.2,15.2"></path>
                    <path stroke-linecap="round" d="M15,1L0.9,15.1"></path>
                </svg>
            </div>
        </div>
    </div>
</div>

<section class="hero-wrap hero-wrap-2" style="background-image: url('images/bg_3.jpg');" data-stellar-background-ratio="0.5">
    <div class="overlay"></div>
    <div class="container">
        <div class="row no-gutters slider-text align-items-end justify-content-center">
            <div class="col-md-9 ftco-animate text-center mb-4">
                <h1 class="mb-2 bread">Blog</h1>
                <p class="breadcrumbs">
                    <span class="mr-2">
                        <a asp-action="Index" asp-controller="Home">Home <i class="ion-ios-arrow-forward"></i></a>
                    </span>
                    <span>Blog <i class="ion-ios-arrow-forward"></i></span>
                </p>
            </div>
        </div>
    </div>
</section>

<section class="ftco-section bg-light">
    <div class="container">
        <div class="row">
            @if (Model == null || Model.Count == 0)
            {
                <div class="col-md-12 text-center">
                    <h3>There are no blog posts available right now.</h3>
                    <p>Check back later for the latest updates!</p>
                </div>
            }
            else
            {
                @foreach (var blog in Model)
                {
                    <div class="col-md-4 ftco-animate">
                        <div class="blog-entry">
                            <a href="@Url.Action("Detail", "Stories", new { id = blog.id })" class="block-20" style="background-image: url('/Media/@blog.banner');"></a>
                            <div class="text pt-3 pb-4 px-4">
                                <div class="meta">
                                    <div><a>@blog.createdDate?.ToString("MMM. dd, yyyy")</a></div>
                                    <div><a>@blog.createdBy</a></div>
                                </div>
                                <h3 class="heading mb-1" style="max-width: 100%; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                                    <a href="@Url.Action("Detail", "Stories", new { id = blog.id })" class="d-block text-truncate text-decoration-none" title="@blog.title">@blog.title</a>
                                </h3>
                                <p class="clearfix">
                                    <a href="@Url.Action("Detail", "Stories", new { id = blog.id })" class="float-left read">Read more</a>
                                    <a class="float-right meta-chat"><i class="bi bi-eye"></i> @blog.ViewCount</a>
                                </p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        @if (Model != null && Model.Count > 0)
        {
            <div class="row no-gutters my-5">
                <div class="col text-center">
                    <div class="block-27">
                        <ul>
                            @if (ViewBag.CurrentPage > 1)
                            {
                                <li><a href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1 })">&lt;</a></li>
                            }
                            else
                            {
                                <li class="disabled"><span>&lt;</span></li>
                            }

                            @for (var i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                if (i == ViewBag.CurrentPage)
                                {
                                    <li class="active"><span>@i</span></li>
                                }
                                else
                                {
                                    <li><a href="@Url.Action("Index", new { page = i })">@i</a></li>
                                }
                            }

                            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                            {
                                <li><a href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })">&gt;</a></li>
                            }
                            else
                            {
                                <li class="disabled"><span>&gt;</span></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>
</section>

<!-- CSS for Transparent Background and Popup Styling -->
<style>
    /* Style for the Popup Background */
    .home-popup__background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Transparent dark background */
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        cursor: pointer; /* Make the background clickable */
    }

    /* Container for Ad Image */
    #adImageContainer {
        position: relative;
        width: 100%; /* Adjust this to make the image a medium size */
        max-width: 600px; /* Optional: Set a max width */
        margin: 0 auto;
        box-sizing: border-box; /* Ensure the border doesn't affect the width */
        overflow: hidden; /* Hide any overflow if necessary */
    }

        /* Image Styling */
        #adImageContainer img {
            width: 100%; /* Make the image responsive */
            height: auto; /* Maintain aspect ratio */
            object-fit: cover; /* Ensures the image fills the container without distortion */
        }

    /* Close button styles */
    .home-popup__close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        cursor: pointer;
    }
</style>

<script>
    // Initialize toast notification with extended display time
    document.addEventListener('DOMContentLoaded', function () {
        var toastElList = [].slice.call(document.querySelectorAll('.toast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl, {
                delay: 10000,  // Display for 10 seconds (10000 milliseconds)
                autohide: true // Set to true for auto-hiding the toast
            })
        })
        toastList.forEach(toast => toast.show());
    });

    async function openPopup() {
        try {
            // Fetch ad data
            const response = await fetch('/Admin/Ads/RandomAd');
            const ad = await response.json();

            console.log("Fetched Ad:", ad);  // Log ad data to verify response

            // Check if ad is valid and ACTIVE
            if (ad && ad.url && ad.status === 'ACTIVE') {
                const popup = document.querySelector('.home-popup__background');
                const container = document.getElementById("adImageContainer");

                // Prepare the popup display
                container.innerHTML = '';  // Clear previous image content
                const img = document.createElement("img");
                img.src = '/Media/' + ad.url;
                img.alt = "Random Ad";
                container.appendChild(img);

                popup.style.display = 'flex';  // Show the popup
                document.body.style.overflow = 'hidden';  // Disable scrolling
            } else {
                console.log("No active ad to display.");
                closePopup();  // Ensure popup stays hidden if no ad or inactive ad
            }
        } catch (error) {
            console.error('Error fetching ad:', error);
        }
    }

    function closePopup() {
        const popup = document.querySelector('.home-popup__background');
        popup.style.display = 'none';
        document.body.style.overflow = 'auto';  // Re-enable scrolling
    }

    // Run openPopup on page load to check for active ad
    openPopup();
</script>