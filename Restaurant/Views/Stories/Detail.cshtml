@model Restaurant.Models.BlogModel

<section class="hero-wrap hero-wrap-2" style="background-image: url('/images/bg_3.jpg');" data-stellar-background-ratio="0.5">
    <div class="overlay"></div>
    <div class="container">
        <div class="row no-gutters slider-text align-items-end justify-content-center">
            <div class="col-md-9 ftco-animate text-center mb-4">
                <h1 class="mb-2 bread">@Model.title</h1>
                <p class="breadcrumbs">
                    <span class="mr-2"><a asp-action="Index" asp-controller="Home">Home <i class="ion-ios-arrow-forward"></i></a></span>
                    <span>Blog <i class="ion-ios-arrow-forward"></i></span>
                </p>
            </div>
        </div>
    </div>
</section>

<section class="ftco-section bg-light">
    <div class="container">
        <div class="row">
            <div class="col-md-12 ftco-animate">
                <div class="blog-entry">
                    <a class="block-20" style="background-image: url('/Media/@Model.banner'); height: 600px; background-size: cover; background-position: center; bottom: 20px"></a>
                    <div class="text pt-3 pb-4 px-4">
                        <div class="meta">
                            <div><a href="#">@Model.createdDate?.ToString("MMM. dd, yyyy")</a></div>
                            <div><a href="#">@Model.createdBy</a></div>
                        </div>
                        <h3 class="heading">@Model.title</h3>
                        <p class="text-break">@Html.Raw(Model.content)</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Comment Form -->
        <div class="col-md-12 ftco-animate">
            @if (User.Identity.IsAuthenticated)
            {
                <h4 class="mb-4">Leave a Comment</h4>
                <form asp-controller="Stories" asp-action="PostComment" method="post">
                    <input type="hidden" name="BlogId" value="@Model.id" />
                    <input type="hidden" name="UserName" value="@User.Identity.Name" />
                    <div class="form-group">
                        <label for="Content">Comment</label>
                        <textarea class="form-control" name="Content" rows="4" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit Comment</button>
                </form>
            }
            else
            {
                <p class="text-muted">You must <a asp-action="Login" asp-controller="Account">log in</a> to leave a comment.</p>
            }
        </div>

        <!-- Comments Section -->
        <div class="col-md-12 ftco-animate mt-5">
            <h4 class="mb-4">Comments</h4>
            <div id="comments" class="comments-list">
                @if (Model.Comments != null && Model.Comments.Any())
                {
                    // Filter only top-level comments
                    var topLevelComments = Model.Comments.Where(c => c.ParentCommentId == null).OrderByDescending(c => c.CreatedDate).ToList();

                    foreach (var comment in topLevelComments)
                    {
                        <div class="comment mb-4 p-3 border rounded">
                            <div class="d-flex justify-content-between align-items-start">
                                <strong class="text-break">@comment.UserName</strong>
                                @if (User.Identity.IsAuthenticated && comment.UserName == User.Identity.Name)
                                {
                                    <form id="delete-form-@comment.CommentId" asp-controller="Stories" asp-action="DeleteComment" method="post" style="display:inline;">
                                        <input type="hidden" name="CommentId" value="@comment.CommentId" />
                                        <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(@comment.CommentId)">Delete</button>
                                    </form>
                                }
                            </div>
                            <div class="content-toggle mt-2">
                                <span class="preview-content text-break" style="word-wrap: break-word;">
                                    @if (comment.Content.Length > 100)
                                    {
                                        @Html.Raw(comment.Content.Substring(0, 100) + "...")
                                    }
                                    else
                                    {
                                        @comment.Content
                                    }
                                </span>
                                @if (comment.Content.Length > 100)
                                {
                                    <span class="full-content text-break" style="display:none; word-wrap: break-word;">@comment.Content</span>
                                    <button class="btn btn-link" onclick="toggleContent(this)">Show More</button>
                                }
                            </div>
                            <small class="text-muted">@comment.CreatedDate.ToString("MMM. dd, yyyy")</small>

                            <div class="button-group mt-2">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <button class="btn btn-secondary btn-sm" onclick="showReplyForm(@comment.CommentId)">Reply</button>
                                }
                            </div>

                            <!-- Display Replies -->
                            <div class="replies mt-4 pl-4">
                                @if (comment.Replies != null && comment.Replies.Any())
                                {
                                    foreach (var reply in comment.Replies.OrderBy(r => r.CreatedDate))
                                    {
                                        <div class="reply mb-3 p-2 border-left">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <strong class="text-break">@reply.UserName</strong>
                                                @if (User.Identity.IsAuthenticated && reply.UserName == User.Identity.Name)
                                                {
                                                    <form id="delete-form-@reply.CommentId" asp-controller="Stories" asp-action="DeleteComment" method="post" style="display:inline;">
                                                        <input type="hidden" name="CommentId" value="@reply.CommentId" />
                                                        <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(@reply.CommentId)">Delete</button>
                                                    </form>
                                                }
                                            </div>
                                            <div class="content-toggle mt-1">
                                                <span class="text-break" style="word-wrap: break-word;">@reply.Content</span>
                                            </div>
                                            <small class="text-muted">@reply.CreatedDate.ToString("MMM. dd, yyyy")</small>
                                        </div>
                                    }
                                }
                            </div>

                            <!-- Reply Form (hidden by default) -->
                            <div id="reply-form-@comment.CommentId" class="reply-form" style="display:none; margin-top: 10px;">
                                <form asp-action="PostReply" asp-controller="Stories" method="post">
                                    <input type="hidden" name="parentCommentId" value="@comment.CommentId" />
                                    <input type="hidden" name="blogId" value="@Model.id" />
                                    <div class="form-group">
                                        <label for="replyContent">Reply</label>
                                        <textarea name="content" class="form-control" required></textarea>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Post Reply</button>
                                </form>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No comments yet. Be the first to comment!</p>
                }
            </div>
        </div>
    </div>
</section>

<style>
    .replies {
        background-color: #f1f1f1;
        padding: 10px;
        border-radius: 5px;
    }

    .button-group {
        margin-top: 10px;
        margin-bottom: 15px;
    }

        .button-group button {
            margin-right: 10px;
        }

    .comments-list {
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
    }

    .comment {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        transition: background-color 0.3s;
    }

        .comment:hover {
            background-color: #f1f1f1;
        }

        .comment strong {
            font-size: 1.1em;
            color: #333;
        }

        .comment small {
            display: block;
            color: #777;
        }
</style>

<script>
    function toggleContent(button) {
        var contentToggle = button.parentElement.parentElement;
        var contentPreview = contentToggle.querySelector('.preview-content');
        var contentFull = contentToggle.querySelector('.full-content');

        if (contentFull.style.display === "none") {
            contentFull.style.display = "inline";
            contentPreview.style.display = "none";
            button.innerText = "Show Less";
        } else {
            contentFull.style.display = "none";
            contentPreview.style.display = "inline";
            button.innerText = "Show More";
        }
    }

    function showReplyForm(commentId) {
        const replyForm = document.getElementById(`reply-form-${commentId}`);
        replyForm.style.display = replyForm.style.display === "none" ? "block" : "none";
    }

    function confirmDelete(commentId) {
        if (confirm("Are you sure you want to delete this comment?")) {
            document.getElementById(`delete-form-${commentId}`).submit();
        }
    }
</script>
