@model Restaurant.Models.BlogModel

<section class="hero-wrap hero-wrap-2" style="background-image: url('/images/bg_3.jpg');" data-stellar-background-ratio="0.5">
    <div class="overlay"></div>
    <div class="container">
        <div class="row no-gutters slider-text align-items-end justify-content-center">
            <div class="col-md-9 ftco-animate text-center mb-4">
                <h1 class="mb-2 bread">@Model.title</h1>
                <p class="breadcrumbs">
                    <span class="mr-2">
                        <a asp-action="Index" asp-controller="Home">
                            Home
                            <i class="ion-ios-arrow-forward"></i>
                        </a>
                    </span>
                    <span>Blog <i class="ion-ios-arrow-forward"></i></span>
                </p>
            </div>
        </div>
    </div>
</section>

<section class="ftco-section bg-light">
    <div class="container">
        <div class="row">
            <div class="col-md-12 ftco-animate">
                <div class="blog-entry">
                    <a class="block-20" style="background-image: url('/Media/@Model.banner'); height: 600px; background-size: cover; background-position: center; bottom: 20px"></a>
                    <div class="text pt-3 pb-4 px-4">
                        <div class="meta">
                            <div><a href="#">@Model.createdDate?.ToString("MMM. dd, yyyy")</a></div>
                            <div><a href="#">@Model.createdBy</a></div>
                        </div>
                        <h3 class="heading">@Model.title</h3>
                        <p class="text-break">@Html.Raw(Model.content)</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Comment Form -->
        <div class="col-md-12 ftco-animate">
            @if (User.Identity.IsAuthenticated)
            {
                <h4 class="mb-4">Leave a Comment</h4>
                <form asp-controller="Stories" asp-action="PostReply" method="post">
                    <input type="hidden" name="blogId" value="@Model.id" />
                    <input type="hidden" name="parentCommentId" value="null" />
                    <div class="form-group">
                        <label for="commentContent">Comment</label>
                        <textarea class="form-control" id="commentContent" name="content" rows="4" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary btn-comment">Submit Comment</button>
                </form>
            }
            else
            {
                <p class="text-muted">You must <a asp-action="Login" asp-controller="Account">log in</a> to leave a comment.</p>
            }
        </div>

        <!-- Comments Section -->
        <div class="col-md-12 ftco-animate mt-5">
            <h4 class="mb-4">Comments</h4>
            <div id="comments" class="comments-list">
                @if (Model.Comments != null && Model.Comments.Any())
                {
                    var topLevelComments = Model.Comments.Where(c => c.ParentCommentId == null)
                    .OrderByDescending(c => c.CreatedDate)
                    .ToList();

                    foreach (var comment in topLevelComments)
                    {
                        <div class="comment mb-4 p-3 border rounded">
                            <div class="d-flex justify-content-between align-items-start">
                                <strong class="text-break">@comment.UserName</strong>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    // Check if the user is an admin using your UserModel
                                    bool isAdmin = User.IsInRole("ADMIN"); // Or check the role directly from the user data
                                    bool isCommentOwner = comment.UserName == User.Identity.Name;

                                    if (isAdmin || isCommentOwner)
                                    {
                                        <form id="delete-form-@comment.CommentId" asp-controller="Stories" asp-action="DeleteComment" method="post" style="display:inline;">
                                            <input type="hidden" name="CommentId" value="@comment.CommentId" />
                                            <button type="button" class="btn btn-danger btn-sm btn-delete" onclick="confirmDelete(@comment.CommentId)">Delete</button>
                                        </form>
                                    }
                                }
                            </div>
                            <p class="text-break">@Html.Raw(comment.Content)</p>
                            <small class="text-muted">@comment.CreatedDate.ToString("MMM. dd, yyyy HH:mm")</small>

                            <!-- Reply Button -->
                            <button class="btn btn-secondary btn-sm btn-reply" onclick="showReplyForm(@comment.CommentId)">Reply</button>

                            <!-- Hidden reply form -->
                            <div id="reply-form-@comment.CommentId" class="reply-form mt-2" style="display:none;">
                                <form asp-controller="Stories" asp-action="PostReply" method="post">
                                    <input type="hidden" name="blogId" value="@Model.id" />
                                    <input type="hidden" name="parentCommentId" value="@comment.CommentId" />
                                    <div class="form-group">
                                        <textarea class="form-control" name="content" rows="2" placeholder="Write your reply..." required></textarea>
                                    </div>
                                    <button type="submit" class="btn btn-primary btn-sm btn-post-reply">Post Reply</button>
                                    <button type="button" class="btn btn-secondary btn-sm btn-cancel" onclick="hideReplyForm(@comment.CommentId)">Cancel</button>
                                </form>
                            </div>

                            <!-- Display Replies -->
                            @if (Model.Comments != null && Model.Comments.Any(c => c.ParentCommentId == comment.CommentId))
                            {
                                // Order replies from oldest to newest
                                var replies = Model.Comments.Where(c => c.ParentCommentId == comment.CommentId)
                                .OrderBy(c => c.CreatedDate);

                                foreach (var reply in replies)
                                {
                                    // Find the parent comment username
                                    var parentUsername = Model.Comments.FirstOrDefault(c => c.CommentId == reply.ParentCommentId)?.UserName;

                                    <div class="comment mb-2 p-2 border rounded" style="margin-left: 20px;">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <strong>@reply.UserName</strong>

                                            <!-- Delete Button for Replies -->
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                bool isReplyAdmin = User.IsInRole("ADMIN");
                                                bool isReplyOwner = reply.UserName == User.Identity.Name;

                                                if (isReplyAdmin || isReplyOwner)
                                                {
                                                    <form id="delete-form-@reply.CommentId" asp-controller="Stories" asp-action="DeleteComment" method="post" style="display:inline;">
                                                        <input type="hidden" name="CommentId" value="@reply.CommentId" />
                                                        <button type="button" class="btn btn-danger btn-sm btn-delete" onclick="confirmDelete(@reply.CommentId)">Delete</button>
                                                    </form>
                                                }
                                            }
                                        </div>

                                        <p>
                                            @if (!string.IsNullOrEmpty(parentUsername))
                                            {
                                                <span style="font-weight: bold; color: #333;">@($"@{parentUsername}")</span>
                                            }
                                            @Html.Raw(reply.Content)
                                        </p>

                                        <small class="text-muted">@reply.CreatedDate.ToString("MMM. dd, yyyy HH:mm")</small>
                                    </div>
                                }
                            }

                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No comments yet. Be the first to comment!</p>
                }
            </div>
        </div>
    </div>
</section>

<script>
    function confirmDelete(commentId) {
        if (confirm("Are you sure you want to delete this comment?")) {
            document.getElementById(`delete-form-${commentId}`).submit();
        }
    }

    function showReplyForm(commentId) {
        document.getElementById(`reply-form-${commentId}`).style.display = 'block';
    }

    function hideReplyForm(commentId) {
        document.getElementById(`reply-form-${commentId}`).style.display = 'none';
    }
</script>

<style>
    .button-group button {
        margin-right: 5px; /* Add spacing between buttons */
    }

    .reply-button {
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .reply-form {
        margin-bottom: 15px; /* Optional: space below the reply form */
    }

    .btn-reply {
        margin: 10px;
    }
</style>
