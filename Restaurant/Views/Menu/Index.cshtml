@model Restaurant.ViewModels.MenuViewModel
@using Newtonsoft.Json
@using Restaurant.ViewModels
@using X.PagedList.Mvc.Core;

@{
    // Retrieve the wishlist from the cookie
    var wishlistCookie = Context.Request.Cookies["wishlist"];
    var wishlist = new List<WishlistItemViewModel>(); // Initialize as a List of WishlistItemViewModel

    if (!string.IsNullOrEmpty(wishlistCookie))
    {
        wishlist = JsonConvert.DeserializeObject<List<WishlistItemViewModel>>(wishlistCookie) ?? new
        List<WishlistItemViewModel>();
    }
}

<div class="home-popup__background" onclick="closePopup()" style="display: none;">
    <div class="home-popup__content">
        <!-- Ad image will be dynamically loaded here -->
        <div id="adImageContainer"></div>

        <div class="home-popup__close-area">
            <div class="home-popup__close-btn" role="button" tabindex="0" aria-label="Close" onclick="closePopup(event)">
                <svg viewBox="0 0 16 16" stroke="#EE4D2D" class="home-popup__close-button">
                    <path stroke-linecap="round" d="M1.1,1.1L15.2,15.2"></path>
                    <path stroke-linecap="round" d="M15,1L0.9,15.1"></path>
                </svg>
            </div>
        </div>
    </div>
</div>

<section class="hero-wrap hero-wrap-2" style="background-image: url('/images/bg_3.jpg');" data-stellar-background-ratio="0.5">
    <div class="overlay"></div>
    <div class="container">
        <div class="row no-gutters slider-text align-items-end justify-content-center">
            <div class="col-md-9 text-center mb-4">
                <h1 class="mb-2 bread">Menu</h1>
                <p class="breadcrumbs">
                    <span><a asp-action="Index" asp-controller="Home">Home <i class="ion-ios-arrow-forward"></i></a></span>
                    <span>Menu <i class="ion-ios-arrow-forward"></i></span>
                </p>
            </div>
        </div>
    </div>
</section>

<section class="ftco-section">
    <div class="container">
        <div class="row">
            <!-- Categories -->
            <div class="col-md-3">
                <ul class="list-group">
                    <!-- Thêm liên kết "Tất cả món" -->
                    <li class="list-group-item">
                        <a href="@Url.Action("Index", "Menu")">All dishes</a>
                    </li>

                    @foreach (var category in Model.category)
                    {
                        <li class="list-group-item">
                            <a href="@Url.Action("DishesByCategory", "Menu", new { categoryId = category.id })">@category.name</a>
                        </li>
                    }
                </ul>
            </div>

            <!-- Dishes -->
            <div class="col-md-9">
                <div class="row">
                    @if (Model.dish != null && Model.dish.Any())
                    {
                        @foreach (var dish in Model.dish)
                        {
                            <div class="col-sm-12 col-md-6 col-lg-4 mb-4">
                                <div class="card h-100">
                                    <!-- Display Images from media -->
                                    <img src="/media/@dish.banner" class="card-img-top" alt="@dish.title"
                                         style="height: 200px; object-fit: cover; width: 100%;"
                                         onerror="this.onerror=null;this.src='/images/default-dish.jpg';" />
                                    <div class="card-body">
                                        <h5 class="card-title">@dish.title</h5>
                                        <p class="card-text">@dish.content</p>
                                        <p class="text-primary font-weight-bold">@dish.price?.ToString("C")</p>
                                        <div class="d-flex align-items-center justify-content-between">
                                            <a href="#" class="btn btn-primary btn-add-cart" data-dish-id="@dish.id"
                                               style="flex-grow: 1; margin-right: 10px;">Order now</a>

                                            <button class="wishlist-btn" data-dish-id="@dish.id" onclick="toggleWishlist(this)">
                                                <i class="@(wishlist.Any(item => item.DishId == dish.id) ? "fas red-heart" : "far") fa-heart"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="col-12 text-center alert alert-info">No dishes available for this category.</p>
                    }
                </div>

                <!-- Paged -->
                <div class="d-flex justify-content-center">
                    @Html.PagedListPager(Model.dish, page => Url.Action("Index", new { page }),
                             new PagedListRenderOptions
                    {
                        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                        DisplayLinkToLastPage = PagedListDisplayMode.Always,
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        DisplayLinkToIndividualPages = true,
                        UlElementClasses = new[] { "pagination", "pagination-lg" },
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" }
                    })
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function toggleWishlist(button) {
        const icon = button.querySelector('i');
        const dishId = button.getAttribute('data-dish-id');
        console.log('Dish ID:', dishId); // Log the dishId for debugging
        const title = button.closest('.card-body').querySelector('.card-title').innerText;
        const priceText = button.closest('.card-body').querySelector('.text-primary').innerText;
        const banner = button.closest('.card').querySelector('img').src;

        const price = parseFloat(priceText.replace(/[^0-9.-]+/g, ""));

        const item = {
            DishId: dishId,
            Title: title,
            Price: price,
            Banner: banner
        };

        if (icon.classList.contains('far')) {
            // Add to wishlist
            icon.classList.remove('far');
            icon.classList.add('fas');
            icon.style.color = 'red';

            // Send AJAX request to add to wishlist
            $.ajax({
                url: '/Wishlist/AddToWishlist',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(item),
                success: function (updatedCount) {
                    console.log('Added to wishlist, new count:', updatedCount);
                    $('#wishlist-count').text(updatedCount); // Update the count in the navbar
                },
                error: function () {
                    console.error('Error adding to wishlist');
                }
            });
        } else {
            // Remove from wishlist
            icon.classList.remove('fas');
            icon.classList.add('far');
            icon.style.color = '';

            $.ajax({
                url: '/Wishlist/RemoveFromWishlist',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(dishId),
                success: function (updatedCount) {
                    console.log('Removed from wishlist, new count:', updatedCount);
                    $('#wishlist-count').text(updatedCount); // Update the count in the navbar
                },
                error: function () {
                    console.error('Error removing from wishlist');
                }
            });
        }
    }
</script>