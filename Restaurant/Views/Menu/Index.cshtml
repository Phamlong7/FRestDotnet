@model Restaurant.ViewModels.MenuViewModel
@using X.PagedList.Mvc.Core; 

<section class="hero-wrap hero-wrap-2" style="background-image: url('/images/bg_3.jpg');" data-stellar-background-ratio="0.5">
    <div class="overlay"></div>
    <div class="container">
        <div class="row no-gutters slider-text align-items-end justify-content-center">
            <div class="col-md-9 text-center mb-4">
                <h1 class="mb-2 bread">Menu</h1>
                <p class="breadcrumbs">
                    <span><a asp-action="Index" asp-controller="Home">Home <i class="ion-ios-arrow-forward"></i></a></span>
                    <span>Menu <i class="ion-ios-arrow-forward"></i></span>
                </p>
            </div>
        </div>
    </div>
</section>

<section class="ftco-section">
    <div class="container">
        <div class="row">
            <!-- Categories -->
            <div class="col-md-3">
                <ul class="list-group">
                    <!-- Thêm liên kết "Tất cả món" -->
                    <li class="list-group-item">
                        <a href="@Url.Action("Index", "Menu")">All dishes</a>
                    </li>

                    @foreach (var category in Model.category)
                    {
                        <li class="list-group-item">
                            <a href="@Url.Action("DishesByCategory", "Menu", new { categoryId = category.id })">@category.name</a>
                        </li>
                    }
                </ul>
            </div>

            <!-- Dishes -->
            <div class="col-md-9">
                <div class="row">
                    @if (Model.dish != null && Model.dish.Any())
                    {
                        @foreach (var dish in Model.dish)
                        {
                            <div class="col-sm-12 col-md-6 col-lg-4 mb-4">
                                <div class="card h-100">
                                    <!-- Display Images from media -->
                                    <img src="/media/@dish.banner" class="card-img-top" alt="@dish.title"
                                         style="height: 200px; object-fit: cover; width: 100%;"
                                         onerror="this.onerror=null;this.src='/images/default-dish.jpg';" />
                                    <div class="card-body">
                                        <h5 class="card-title">@dish.title</h5>
                                        <p class="card-text">@dish.content</p>
                                        <p class="text-primary font-weight-bold">@dish.price?.ToString("C")</p>
                                        <a href="#" class="btn btn-primary btn-add-cart" data-dish-id="@dish.id">Order now</a>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="col-12 text-center alert alert-info">No dishes available for this category.</p>
                    }
                </div>

                <!-- Paged -->
                <div class="d-flex justify-content-center">
                    @Html.PagedListPager(Model.dish, page => Url.Action("Index", new { page }),
                             new PagedListRenderOptions
                    {
                        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                        DisplayLinkToLastPage = PagedListDisplayMode.Always,
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        DisplayLinkToIndividualPages = true,
                        UlElementClasses = new[] { "pagination", "pagination-lg" }, 
                        LiElementClasses = new[] { "page-item" }, 
                        PageClasses = new[] { "page-link" } 
                    })
                </div>
            </div>
        </div>
    </div>
</section>
