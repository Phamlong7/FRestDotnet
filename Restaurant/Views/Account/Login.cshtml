@using Restaurant.ViewModels;
@model LoginViewModel;

@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}
<!-- Include Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">

@if (TempData["SuccessMessage"] != null)
{
    <div class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" style="position: fixed; top: 20px; right: 20px; z-index: 1050; min-width: 250px;">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["SuccessMessage"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
}

<div class="account-container">
    <div class="account-box">
        <h2 class="text-center mb-4">Login</h2>
        <form asp-action="Login" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label asp-for="EmailOrUsername" class="form-label">Email or Username</label>
                <input asp-for="EmailOrUsername" class="form-control" />
                <span asp-validation-for="EmailOrUsername" class="text-danger"></span>
            </div>
            <div class="mb-3 position-relative">
                <label asp-for="Password" class="form-label">Password</label>
                <div class="input-group">
                    <input asp-for="Password" class="form-control" id="password" type="password" placeholder="Enter your password" />
                    <button type="button" id="togglePassword" class="btn btn-outline-secondary" style="cursor: pointer;">
                        <i id="passwordIcon" class="bi bi-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="float-end">
                <a asp-controller="Account" asp-action="VerifyEmailForChangePassword" class="text-decoration-none">
                    Forgot password?
                </a>
            </div>
            <div class="form-check mb-3">
                <label class="form-check-label">
                    <input asp-for="RememberMe" class="form-check-input" />
                    @Html.DisplayNameFor(a => a.RememberMe)
                </label>
            </div>
            <input type="submit" value="Login" class="btn btn-success w-100 p-2" />
            <p class="text-center mt-2">
                Don't have an account? <a asp-controller="Account" asp-action="Register" class="text-decoration-none">Register</a>
            </p>
            <div class="text-center">
                <a asp-controller="Home" asp-action="Index" class="text-decoration-none mt-3">Back</a>
            </div>
        </form>
    </div>
</div>

<script>
    // Initialize toast notification with extended display time
    document.addEventListener('DOMContentLoaded', function () {
        var toastElList = [].slice.call(document.querySelectorAll('.toast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl, {
                delay: 10000,  // Display for 10 seconds (10000 milliseconds)
                autohide: true // Set to true for auto-hiding the toast
            })
        })
        toastList.forEach(toast => toast.show());
    });

    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');
    const passwordIcon = document.getElementById('passwordIcon');

    togglePassword.addEventListener('click', function () {
        // Toggle the type attribute using getAttribute() method
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);

        // Toggle the eye icon
        passwordIcon.classList.toggle('bi-eye'); // Show icon
        passwordIcon.classList.toggle('bi-eye-slash'); // Hide icon
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
}
